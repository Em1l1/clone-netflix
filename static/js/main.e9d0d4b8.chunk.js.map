{"version":3,"sources":["Tmdb.js","components/MovieRow.jsx","components/FeaturedMovie.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","basicFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","endpoint","req","json","wrap","_context","prev","next","fetch","concat","sent","abrupt","stop","_x","apply","this","arguments","Tmdb","getHomeList","_getHomeList","_callee2","_context2","t0","t1","slug","title","items","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","getMovieInfo","_getMovieInfo","_callee3","movieId","type","info","_context3","_x2","_x3","components_MovieRow","react_default","createElement","className","results","length","map","item","key","src","poster_path","alt","original_title","components_FeaturedMovie","style","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","number_of_seasons","overview","src_App","_useState","useState","_useState2","slicedToArray","movieList","setMovieList","_useState3","_useState4","featuredData","setFeaturedData","useEffect","list","originals","randomChosen","chosen","chosenInfo","filter","i","Math","floor","random","id","loadAll","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9d0d4b8.chunk.js","sourcesContent":["const API_KEY = 'aae6530568639a0bf2eeee224a299170';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n \r\n/*\r\n- originals netflix\r\n- recomendados (trending)\r\n- top rated\r\n- anime\r\n- comedia\r\n- terror\r\n- romance\r\n- documentales\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json();\r\n  return json;\r\n}\r\n\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'originals de Netflix',\r\n        items: await basicFetch(`/discover/tv?with_network=123&language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'trending',\r\n        title: 'Recomendados para ti',\r\n        items: await basicFetch(`/trending/all/week?language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'toprated',\r\n        title: 'Alto',\r\n        items: await basicFetch(`/movie/top_rated?language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'action',\r\n        title: 'Action',\r\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'comedy',\r\n        title: 'Comey',\r\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'horror',\r\n        title: 'Terror',\r\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'romance',\r\n        title: 'Romance',\r\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'documentary',\r\n        title: 'Documentary',\r\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-EN&api_key=${API_KEY}`)\r\n      },\r\n    ];\r\n  },\r\n\r\n  getMovieInfo: async (movieId, type) => {\r\n    let info = {};\r\n\r\n    if(movieId) {\r\n      switch(type) {\r\n        case 'movie':\r\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n          break;\r\n          case 'tv':\r\n            info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n          break;\r\n          default:\r\n            info = null;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n} \r\n","import React from 'react';\r\nimport './MovieRow.css';\r\n\r\nexport default ({title, items}) => {\r\n  return (\r\n    <div className=\"movieRow\">\r\n      <h2>{title}</h2> \r\n      <div className=\"movieRow--listare\">\r\n        <div className=\"movieRiow--list\">\r\n          {items.results.length > 0 && items.results.map((item, key) => (\r\n            <div key={key} className=\"movieRow--item\">\r\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n            </div>\r\n             // vamos en la hora 1:00:0\r\n        ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport './FeaturedMovie.css';\r\n\r\nexport default ({item}) => {\r\n  return (\r\n    <section \r\n      className=\"featured\"\r\n      style={{\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n      }}\r\n    >\r\n      <div className=\"featured--vertical\">\r\n        <div className=\"featured--horizontal\">\r\n          <div className=\"featured--name\">\r\n            {item.original_name}\r\n          </div>\r\n          <div className=\"featured--info\">\r\n            <div className=\"featured--points\">\r\n              {item.vote_average} points\r\n            </div>\r\n            <div className=\"featured--year\">\r\n              2099 year\r\n            </div>\r\n            <div className=\"featured--seasons\">\r\n              {item.number_of_seasons} season{item.number_of_seasons !== 1 ? 's' : ''}\r\n            </div>\r\n          </div>\r\n          <div className=\"featured--description\">\r\n            {item.overview}\r\n            {/* vamos en 📺1:44:18 */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.css'\r\nimport Tmdb from './Tmdb';\r\nimport MovieRow from './components/MovieRow';\r\nimport FeaturedMovie from './components/FeaturedMovie';\r\n\r\nexport default () => {\r\n\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [featuredData, setFeaturedData] = useState(null);\r\n\r\n  useEffect(()=>{\r\n   const loadAll = async ()  => {\r\n      // Agreando lista total\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      // Paste Featured\r\n      let originals = list.filter(i=>i.slug === 'originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n      let chosen = originals[0].items.results[randomChosen];\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\r\n      setFeaturedData(chosenInfo);\r\n    }\r\n    loadAll();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n\r\n      {featuredData &&\r\n        <FeaturedMovie item={featuredData} />    \r\n      }\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow key={key} title={item.title} items={item.items} />\r\n        ))}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}